---
import { getCollection } from "astro:content";
import { render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { slugify } from "@/utils/formatter";
import BlogLayout from "@/layouts/blog-layout.astro";
import { Image } from "astro:assets";

export const getStaticPaths = async () => {
  try {
    const blogs = await getCollection("blog");

    return blogs.map((blog) => ({
      params: { blogId: slugify(blog.data.title) },
      props: { blog },
    }));
  } catch (error) {
    return [];
  }
};

const { blog } = Astro.props;
const { Content, headings } = await render(blog);

const { pathname } = Astro.url;
---

<BaseLayout title={blog.data.title} description={blog.data.description}>
  <BlogLayout>
    {
      blog.data.heroImage && (
        <Image
          src={blog.data.heroImage}
          alt={blog.data.title}
          height={300}
          width={1280}
          loading={"lazy"}
          class={"rounded-2xl md:h-[40rem] object-cover "}
        />
      )
    }
    <p class="text-lg">
      Written by
      {
        blog.data.author.length >= 2
          ? blog.data.author.map((a, index) => (
              <a
                href={`/blog/authors/${slugify(a)}`}
                class="text-emerald-200 hover:text-emerald-600"
              >
                {index === blog.data.author.length - 1 ? " & " + a : a + ", "}
              </a>
            ))
          : blog.data.author.map((a) => (
              <a
                href={`/blog/authors/${slugify(a)}`}
                class="text-emerald-200 hover:text-emerald-600"
              >
                {a}
              </a>
            ))
      }
    </p>
    <details id="blogToc">
      <summary
        class="outline-1 px-3 py-2 rounded-md marker:hidden max-w-5xl first-letter:uppercase mt-3"
      >
        on this page
      </summary>
      <ul class="flex flex-col gap-2.5">
        {
          headings.map((heading) => (
            <a
              href={`${pathname}#${heading.slug}`}
              class={`w-fit ml-${heading.depth} text-gray-${heading.depth * 100} text-lg`}
            >
              {heading.text}
            </a>
          ))
        }
      </ul>
    </details>
    <Content />

    <div class="my-8 space-x-1.5">
      {
        blog.data.categories.map((cat) => (
          <a
            href={`/blog/categories/${slugify(cat.replaceAll("/", " "))}`}
            class="px-3 py-2 text-sm bg-emerald-800"
          >
            {cat}
          </a>
        ))
      }
    </div>
  </BlogLayout>
</BaseLayout>
